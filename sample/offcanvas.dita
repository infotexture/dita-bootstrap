<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<!-- Within the sample documentation, where necessary, the texts describing the
   usage of each component have been copied directly from the official Bootstrap
   5.3 documentation (found at https://getbootstrap.com/docs/5.3), however DITA
   markup is used throughout the examples describing how to implement these
   components correctly using outputclass.

   This work, is a derivative of "Bootstrap 5.3 docs" by Twitter, Inc.
   and the Bootstrap Authors, and used under CC BY 3.0. See the accompanying LICENSE
   file for applicable licenses.-->
<topic id="offcanvas">
  <title>Offcanvas</title>
  <shortdesc>Build hidden sidebars into your project for navigation, shopping carts, and more with a few classes and
    Bootstrap’s JavaScript plugin.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Offcanvas</indexterm>
        <indexterm>CSS
          <indexterm><xmlatt>outputclass</xmlatt></indexterm>
        </indexterm>
        <indexterm><xmlelement>section</xmlelement></indexterm>
        <indexterm><xmlelement>xref</xmlelement></indexterm>
        <indexterm><xmlatt>props</xmlatt></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body outputclass="language-markup">
    <section>
      <title>How it works</title>
      <p>Offcanvas is a sidebar component that can be toggled via JavaScript to appear from the left, right, or bottom
        edge of the viewport. Buttons or anchors are used as triggers that are attached to specific elements you toggle,
        and data attributes are used to invoke Bootstrap’s JavaScript.</p>
      <ul>
        <li>Offcanvas shares some of the same JavaScript code as modals. Conceptually, they are quite similar, but they
          are separate plugins.</li>
        <li>Similarly, some source Sass variables for offcanvas’s styles and dimensions are inherited from the modal’s
          variables.</li>
        <li>When shown, offcanvas includes a default backdrop that can be clicked to hide the offcanvas.</li>
        <li>Similar to modals, only one offcanvas can be shown at a time.</li>
      </ul>
      <p>Heads up! Given how CSS handles animations, you cannot use margin or translate in a Bootstrap offcanvas
        element. Instead, use the class as an independent wrapping element.</p>
    </section>
    <section>
      <title>Offcanvas components</title>
      <p>Below is an offcanvas example that is displayed when the button is clicked. Add
          <xmlatt>props="offcanvas-toggle"</xmlatt> to an <xmlelement>xref</xmlelement> element to associate a button to
        an offcanvas</p>
    </section>
    <bodydiv outputclass="bd-example" deliveryTarget="html">
      <xref outputclass="btn-primary" props="offcanvas-toggle" href="#offcanvas1">Click here to display offcanvas</xref>
      <section outputclass="offcanvas-start" id="offcanvas1">
        <title>Offcanvas</title>
        <p>Content for the offcanvas goes here. You can place just about any section elements here.</p>
      </section>
    </bodydiv>
    <codeblock>&lt;xref outputclass="btn-primary" props="offcanvas-toggle" href="#offcanvas1"&gt;
  Click here
&lt;/xref&gt;
&lt;section outputclass="offcanvas-start" id="offcanvas1"&gt;
  &lt;title&gt;Offcanvas&lt;/title&gt;
  &lt;p&gt;
    Content for the offcanvas goes here. You can place just about any section elements here.
  &lt;/p&gt;
&lt;/section&gt;</codeblock>
    <section>
      <title>Placement</title>
      <p>There’s no default placement for offcanvas components, so you must add one of the modifier outputclasses
        below</p>
      <ul>
        <li>Setting <xmlatt>outputclass="offcanvas-start"</xmlatt> places offcanvas on the left of the
          viewport (shown above)</li>
        <li>Setting <xmlatt>outputclass="offcanvas-end"</xmlatt> places offcanvas on the right of the
          viewport</li>
        <li>Setting <xmlatt>outputclass="offcanvas-bottom"</xmlatt> places offcanvas on the bottom of
          the viewport</li>
        <li>Setting <xmlatt>outputclass="offcanvas-top"</xmlatt> places offcanvas on the top of
          the viewport</li>
      </ul>
    </section>
    <bodydiv outputclass="bd-example" deliveryTarget="html">
      <xref outputclass="btn-primary" props="offcanvas-toggle" href="#offcanvas2">Toggle right offcanvas</xref>
      <section outputclass="offcanvas-end" id="offcanvas2">
        <title>Offcanvas</title>
        <p>Content for the offcanvas goes here. You can place just about any section elements here.</p>
      </section>
    </bodydiv>
    <codeblock>&lt;section outputclass="offcanvas-end"&gt;
  ...etc
&lt;section&gt;</codeblock>
    <bodydiv outputclass="bd-example" deliveryTarget="html">
      <xref outputclass="btn-primary" props="offcanvas-toggle" href="#offcanvas3">Toggle bottom offcanvas</xref>
      <section outputclass="offcanvas-bottom" id="offcanvas3">
        <title>Offcanvas</title>
        <p>Content for the offcanvas goes here. You can place just about any section elements here.</p>
      </section>
    </bodydiv>
    <codeblock>&lt;section outputclass="offcanvas-bottom"&gt;
  ...etc
&lt;section&gt;</codeblock>
    <section>
      <title>Responsive</title>
      <p
      >Responsive offcanvas outputclasses hide content outside the viewport from a specified breakpoint and down. Above that breakpoint, the contents within will behave as usual. For example, <xmlatt
        >outputclass="offcanvas-lg"</xmlatt> hides content in an offcanvas below the <codeph
        >lg</codeph> breakpoint, but shows the content above the <codeph>lg</codeph> breakpoint.</p>
    </section>
    <bodydiv outputclass="bd-example" deliveryTarget="html">
      <note
        outputclass="alert-info d-none d-lg-block"
      >Resize your browser to show the responsive offcanvas toggle.</note>
      <xref outputclass="btn-primary d-lg-none" props="offcanvas-toggle" href="#offcanvas4">Toggle offcanvas</xref>
      <section outputclass="offcanvas-lg" id="offcanvas4">
        <title>Offcanvas</title>
        <p>This is content within an <xmlatt>outputclass="offcanvas-lg"</xmlatt>.</p>
      </section>
    </bodydiv>
    <p>Responsive offcanvas classes are available across for each breakpoint.</p>
    <ul>
      <li><xmlatt>outputclass="offcanvas"</xmlatt></li>
      <li><xmlatt>outputclass="offcanvas-sm"</xmlatt></li>
      <li><xmlatt>outputclass="offcanvas-md"</xmlatt></li>
      <li><xmlatt>outputclass="offcanvas-lg"</xmlatt></li>
      <li><xmlatt>outputclass="offcanvas-xl"</xmlatt></li>
      <li><xmlatt>outputclass="offcanvas-xxl"</xmlatt></li>
    </ul>
    <codeblock>&lt;note outputclass="alert-info d-none d-lg-block"&gt;
  Resize your browser to show the responsive offcanvas toggle.
&lt;/note&gt;
&lt;xref outputclass="btn-primary d-lg-none" props="offcanvas-toggle" href="#offcanvas4"&gt;
  Toggle offcanvas
&lt;/xref&gt;
&lt;section outputclass="offcanvas-lg" id="offcanvas4"&gt;
  &lt;title&gt;Offcanvas&lt;/title&gt;
  &lt;p&gt;
    This is content within an &lt;xmlatt&gt;outputclass="offcanvas-lg"&lt;/xmlatt&gt;.
  &lt;/p&gt;
&lt;/section&gt;</codeblock>
  </body>
</topic>
